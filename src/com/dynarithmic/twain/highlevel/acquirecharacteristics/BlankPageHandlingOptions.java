package com.dynarithmic.twain.highlevel.acquirecharacteristics;

import com.dynarithmic.twain.DTwainConstants;
import com.dynarithmic.twain.DTwainConstants.BlankPageDetectionOption;
import com.dynarithmic.twain.DTwainConstants.BlankPageDiscardOption;

/**
 * @author Dynarithmic Software
 * <p>BlankPageHandlingOptions gets/sets the options when handling blank pages that are acquired by the device.<br>
 *    The options presented here work with any TWAIN-enabled device, since these options are executed solely through<br>
 *    the underlying DTWAIN library, and not TWAIN.<br><br>
 *    When a blank page is detected, the following TwainCallback functions will be invoked if the page is not automatically discarded:<br>
 *    <ul>
 *     <li>{@link com.dynarithmic.twain.highlevel.TwainCallback#onBlankPageDetectedOriginalImage(long)}</li>
 *     <li>{@link com.dynarithmic.twain.highlevel.TwainCallback#onBlankPageDetectedAdjustedImage(long)}</li>
 *     </ul>
 *     <br>Returning BlankPageHandlingOptions.DISCARDPAGE from the callback functions listed above will discard the blank page.
 */
public class BlankPageHandlingOptions
{
    private boolean enabled = false;
    private double threshold = defaultThreshold;
    private DTwainConstants.BlankPageDiscardOption discardOption = defaultBlankPageDiscardOption;
    private DTwainConstants.BlankPageDetectionOption detectionOption = defaultBlankPageDetectionOption;

    public static final DTwainConstants.BlankPageDiscardOption defaultBlankPageDiscardOption = DTwainConstants.BlankPageDiscardOption.AUTODISCARD_NONE;
    public static final DTwainConstants.BlankPageDetectionOption defaultBlankPageDetectionOption = DTwainConstants.BlankPageDetectionOption.DETECT_BOTH;
    public static final double defaultThreshold = 98.0;
    public static final int KEEPPAGE = 1;
    public static final int DISCARDPAGE = 0;

    /**
     * @return Returns true if blank page handling is enabled, otherwise false is returned.
     * @see #enable(boolean)
     */
    public boolean isEnabled()
    {
        return enabled;
    }

    /**
     * @return Returns the threshold of the blank page detection.  For example, 98.0 would mean that the page must be
     * <br>    98 percent blank for the page to be considered a blank page.
     * @see #setThreshold(double)
     */
    public double getThreshold()
    {
        return threshold;
    }

    /**
     * @return The blank page discard option.
     * @see #setDiscardOption(DTwainConstants.BlankPageDiscardOption)
     */
    public BlankPageDiscardOption getDiscardOption()
    {
        return discardOption;
    }

    /**
     * @return The blank page detection option.
     * @see BlankPageHandlingOptions#setDetectionOption(DTwainConstants.BlankPageDetectionOption)
     */
    public BlankPageDetectionOption getDetectionOption()
    {
        return this.detectionOption;
    }

    /**
     * @param detectionOption The blank page detection option.  The detection option determines at what<br>
     * stages during the acquisition process where blank page detection will be used.<br>The valid values are as follows:
     * <ul>
       <li>BlankPageDetectionOption.DETECT_ORIGINAL -- Check original image generated by the device if it is blank</li>
       <li>BlankPageDetectionOption.DETECT_ADJUSTED -- Check adjusted image after cropping, bit-depth reduction, etc. if it is blank</li>
       <li>BlankPageDetectionOption.DETECT_BOTH     -- Detect blank page on both the original and adjusted images</li>
       </ul>
     * @return The current object.
     * @see #getDetectionOption()
     */
    public BlankPageHandlingOptions setDetectionOption(DTwainConstants.BlankPageDetectionOption detectionOption)
    {
        this.detectionOption = detectionOption;
        return this;
    }

    /**
     * @param enabled Enable blank page handling.
     * @return The current object.
     * @see #isEnabled()
     */
    public BlankPageHandlingOptions enable(boolean enabled)
    {
        this.enabled = enabled;
        return this;
    }

    /**
     * @param threshold Sets the threshold of the blank page detection.  For example, 98.0 would mean that the page must be
     * <br>    98 percent blank for the page to be considered a blank page.
     * @return The current object.
     * @see #getThreshold()
     */
    public BlankPageHandlingOptions setThreshold(double threshold)
    {
        this.threshold = threshold;
        return this;
    }

    /**
     * @param discardOption The blank page discard option.  The discard option determines whether the pages will be automatically discarded<br>
     * when a blank page is detected.  The value for <i>discardOption</i> can be one of the following:
     * <ul style=�list-style-type:disc�>
       <li>BlankPageDiscardOption.AUTODISCARD_NONE      -- Do not automatically discard pages</li>
       <li>BlankPageDiscardOption.AUTODISCARD_ORIGINAL  -- Automatically discard the page if the original image is blank</li>
       <li>BlankPageDiscardOption.AUTODISCARD_ADJUSTED  -- Automatically discard the page if the adjusted image is blank</li>
       <li>BlankPageDiscardOption.AUTODISCARD_ALL       -- Automatically discard the blank page, whether it is the original or adjusted image</li>
       </ul><br>
     * For pages that are not automatically discarded
     * @return The current object.
     * @see #getDiscardOption()
     *
     */
    public BlankPageHandlingOptions setDiscardOption(DTwainConstants.BlankPageDiscardOption discardOption)
    {
        this.discardOption = discardOption;
        return this;
    }
}
